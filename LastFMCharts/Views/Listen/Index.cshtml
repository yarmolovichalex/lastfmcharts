@{
    Layout = null;
}

<!DOCTYPE html>

<html ng-app="listenApp">
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Listen</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.0.0-alpha/css/bootstrap.min.css" rel="stylesheet" type="text/css" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/allmighty-autocomplete/1.0.140706/autocomplete.min.css" rel="stylesheet" type="text/css" />
</head>
<body ng-controller="MainCtrl as ctrl" class="container">

    <div style="padding: 1rem 0.5rem; text-align: center">
        <h4>Listen to the most popular tracks of selected artist</h4>
    </div>

    <div ng-show="!ctrl.isAuthVk">
        <div id="login_button" ng-click="ctrl.loginVk()"></div>
    </div>

    <div ng-show="ctrl.isAuthVk">
        <form name="artistForm" ng-submit="ctrl.submit()" class="form-horizontal">
            <div class="form-group">
                <span class="label label-default">Artist: </span>
                <autocomplete ng-required="true"
                              ng-model="ctrl.artist"
                              data="ctrl.artistSuggestions"
                              on-type="ctrl.updateArtistSuggestions"
                              attr-input-class="form-control"></autocomplete>
            </div>
            <button type="submit" ng-disabled="artistForm.$invalid" class="btn btn-primary">Submit</button>
        </form>

        <br />

        <div ng-show="ctrl.isFailResponse" ng-cloak>
            <p class="bg-danger">{{ctrl.failResponseMessage}}</p>
        </div>

        <table ng-show="ctrl.artist !== null" class="table">
            <tr ng-repeat="track in ctrl.tracks">
                <td>
                    <p>{{track.name}}</p>
                </td>
                <td>
                    <audio controls preload="none" ng-src="{{ctrl.updateSrc(track.url)}}"></audio>
                </td>
            </tr>
        </table>
    </div>

    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.4.8/angular.min.js"></script>
    <script src="~/Scripts/Compare/autocomplete.js"></script>
    <script src="//vk.com/js/api/openapi.js" type="text/javascript"></script>
    <script type="text/javascript">

        VK.init({
            apiId: 4746712 // todo move to config
        });
        VK.UI.button('login_button');

        angular.module('listenApp', ['autocomplete'])
            .controller('MainCtrl', [
                '$http', '$sce', '$timeout', '$scope', function ($http, $sce, $timeout, $scope) {
                    var self = this;

                    self.isAuthVk = false;

                    self.authVk = function (response) {
                        $timeout(function() {
                            if (response.session) {
                                self.isAuthVk = true;
                            } else {
                                self.isAuthVk = false;
                            }
                            console.log("isAuthVk: " + self.isAuthVk);
                        });
                    };

                    VK.Auth.getLoginStatus(self.authVk);

                    self.loginVk = function () {
                        VK.Auth.login(self.authVk, 8);
                    };

                    self.artist = null;

                    self.updateArtistSuggestions = function (userInput) {
                        if (userInput) {
                            $http.get("/api/artistsuggestions/" + userInput)
                                .then(function (response) {
                                    self.artistSuggestions = response.data;
                                }, function (error) {
                                    // no need to show autocomplete errors on UI
                                    console.log(error);
                                });
                        }
                    };

                    self.updateSrc = function (src) {
                        return $sce.trustAsResourceUrl(src);
                    };

                    self.populateTrackWithUrl = function (trackName) {
                        var fullTrackName = self.artist + " - " + trackName;
                        VK.Api.call('audio.search', { q: fullTrackName }, function (response) {
                            console.log(response);
                            if (response.response) {
                                var track = response.response[1];
                                self.tracks.push({ name: trackName, url: track["url"] });
                                $scope.$apply();
                            }
                        });
                    };

                    self.submit = function () {
                        self.tracks = [];
                        $http.get('/api/toptracks/' + self.artist)
                            .then(function (response) {
                                console.log(response.data);

                                response.data.forEach(function (trackName, index) {
                                    $timeout(function () {
                                        self.populateTrackWithUrl(trackName);
                                    }, index * 400);
                                });
                                self.isFailResponse = false;
                            }, function (error) {
                                self.isFailResponse = true;
                                self.failResponseMessage = error.data;
                            });
                    };
                }
            ]);

        document.addEventListener('play', function (e) {
            var audios = document.getElementsByTagName('audio');
            for (var i = 0, len = audios.length; i < len; i++) {
                if (audios[i] !== e.target) {
                    audios[i].pause();
                }
            }
        }, true);

        document.addEventListener('ended', function (e) {
            var audios = document.getElementsByTagName('audio');
            for (var i = 0, len = audios.length; i < len; i++) {
                if (audios[i] === e.target && audios[i + 1] !== undefined) {
                    audios[i + 1].play();
                }
            }
        }, true);
    </script>
</body>
</html>