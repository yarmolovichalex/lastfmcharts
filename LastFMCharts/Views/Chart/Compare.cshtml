@{
    Layout = null;
}

<!DOCTYPE html>

<html ng-app="lastFMCharts">
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Last FM Charts</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.0.0-alpha/css/bootstrap.min.css" rel="stylesheet" type="text/css" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/allmighty-autocomplete/1.0.140706/autocomplete.min.css" rel="stylesheet" type="text/css" />
</head>
<body ng-controller="MainCtrl as ctrl">

    <form ng-submit="ctrl.submit()">
        <div ng-repeat="artist in ctrl.artists track by $index" class="form-group">
            <label>Artist {{$index + 1}}: </label>
            <autocomplete attr-input-class="form-control" ng-model="ctrl.artists[$index]" data="ctrl.artistsSuggestions" on-type="ctrl.updateArtistsSuggestions"></autocomplete>
        </div>
        <button type="submit" class="btn btn-default">Submit</button>
    </form>

    <br />

    <button ng-click="ctrl.addArtist()" class="btn btn-default">Add Artist</button>

    <br />

    <div ng-show="ctrl.artistsInfo.length !== 0">
        <div>Listeners:</div>
        <div>
            <canvas id="listeners"></canvas>
        </div>

        <div>Plays:</div>
        <div>
            <canvas id="plays"></canvas>
        </div>
    </div>

    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.4.8/angular.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/1.0.2/Chart.min.js"></script>
    <script src="~/Scripts/autocomplete.js"></script>

    <script type="text/javascript">
        angular.module('lastFMCharts', ['autocomplete'])
            .controller('MainCtrl', [
                '$http', function ($http) {
                    var self = this;
                    self.artists = [null, null];
                    self.artistsInfo = [];

                    Chart.defaults.global.responsive = true;
                    self.listenersChartContext = new Chart(document.getElementById('listeners').getContext('2d'));
                    self.playsChartContext = new Chart(document.getElementById('plays').getContext('2d'));

                    self.listenersChart = null;
                    self.playsChart = null;

                    self.fillCharts = function () {
                        if (self.listenersChart != null) {
                            self.listenersChart.destroy();
                        }

                        if (self.playsChart != null) {
                            self.playsChart.destroy();
                        }

                        var labels = [];
                        var listeners = [];
                        var plays = [];

                        var artistsInfoLength = self.artistsInfo.length;

                        for (var i = 0; i < artistsInfoLength; i++) {
                            var artistInfo = self.artistsInfo[i];
                            labels.push(artistInfo.Name);
                            listeners.push(artistInfo.Listeners);
                            plays.push(artistInfo.Plays);
                        };

                        var listenersData = {
                            labels: labels,
                            datasets: [
                                {
                                    fillColor: "rgba(220,220,220,0.5)",
                                    strokeColor: "rgba(220,220,220,0.8)",
                                    highlightFill: "rgba(220,220,220,0.75)",
                                    highlightStroke: "rgba(220,220,220,1)",
                                    data: listeners
                                }
                            ]
                        };

                        var playsData = {
                            labels: labels,
                            datasets: [
                                {
                                    fillColor: "rgba(151,187,205,0.5)",
                                    strokeColor: "rgba(151,187,205,0.8)",
                                    highlightFill: "rgba(151,187,205,0.75)",
                                    highlightStroke: "rgba(151,187,205,1)",
                                    data: plays
                                }
                            ]
                        };

                        self.listenersChart = self.listenersChartContext.Bar(listenersData);
                        self.playsChart = self.playsChartContext.Bar(playsData);
                        window.dispatchEvent(new Event('resize'));
                    };

                    self.submit = function () {
                        $http.post('@Url.Action("Compare")', { artists: self.artists })
                            .then(function (response) {
                                self.artistsInfo = response.data;
                                self.fillCharts();
                            }, function (error) {
                                console.log(error);
                            });
                    };

                    self.artistsSuggestions = [];

                    self.updateArtistsSuggestions = function (userInput) {
                        $http.post('@Url.Action("GetArtistsSuggestions")', { userInput: userInput })
                            .then(function (response) {
                                self.artistsSuggestions = response.data;
                            }, function (error) {
                                console.log(error);
                            });
                    };

                    self.addArtist = function () {
                        self.artists.push(null);
                    };
                }
            ])
    </script>
</body>
</html>